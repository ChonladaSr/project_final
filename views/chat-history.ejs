<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ข้อความ</title>
  <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/6342/6342703.png">
  <%- include('./font') %>

  <style>
    body {
      font-family: 'Arial', sans-serif;
      display: flex;
      justify-content: center;

      height: 100vh;
      margin: 0;
    }

    #user-list,
    #chat-container {
      width: 45%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 8px;
      margin: 10px;
    }

    #user-list ul {
      list-style: none;
      padding: 0;
    }

    #user-list ul li {
      cursor: pointer;
      padding: 5px;
      border-bottom: 1px solid #ddd;
    }

    #messages {
      height: 400px;
      overflow-y: scroll;
      margin-bottom: 10px;
    }

    .message {
      padding: 10px;
      border-radius: 10px;
      margin-bottom: 10px;
    }

    .message.sent {
      background-color: #dbffb6;
      align-self: flex-end;
      text-align: right;
    }

    .message.received {
      background-color: #e4e4e4;
    }

    #message-input {
      width: 80%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }

    #send-button {
      width: 60px;
      padding: 10px;
      background-color: #28a745;
      color: white;
      border: none;
      cursor: pointer;
    }
    .text-sm {
        font-size: 0.875rem;
        /* Smaller font size */
      }

      .text-gray-500 {
        color: #6b7280;
        /* Gray text color */
      }
  </style>
</head>

<body>
  <div id="user-list">
    <h2 class="prompt-medium">ผู้ใช้งาน</h2>
    <ul id="users" class="prompt-regular"></ul>
  </div>

  <div id="chat-container" style="display:none;">
    <h2 class="prompt-medium">แชทกับ <span id="chat-with"></span></h2>
    <div id="messages" class="prompt-regular"></div>
    <input id="message-input" class="prompt-regular" type="text" placeholder="พิมพ์ข้อความที่นี่...">
    <button id="send-button" class="prompt-regular">ส่ง</button>
  </div>

  <script src="/socket.io/socket.io.js"></script>

  <script>
    const socket = io();
    const teamId = "<%= teamId %>"; // Team ID from the backend
    const userList = document.getElementById('users');
    let currentUserId = null;
    let currentRoom = null;
  
    // ดึงรายชื่อผู้ใช้ที่ทีมเคยแชทด้วย
    socket.emit("getChatUsers", teamId);
  
    // แสดงรายชื่อผู้ใช้
    socket.on('chatUsers', (users) => {
      users.forEach(user => {
        const li = document.createElement('li');
        li.textContent = user.name;
        li.onclick = () => {
          currentUserId = user.id;
          joinChat(user.name);
        };
        userList.appendChild(li);
      });
    });
  
    // เข้าร่วมห้องแชทส่วนตัว
    function joinChat(userName) {
      document.getElementById('chat-with').textContent = userName;
      document.getElementById('chat-container').style.display = 'block';
      const room = `${teamId}-${currentUserId}`;
      currentRoom = room;
  
      socket.emit("joinPrivateChat", { teamId, userId: currentUserId });
    }
  
    socket.on('loadMessages', (messages) => {
  const messagesContainer = document.getElementById('messages');
  messagesContainer.innerHTML = ''; // Clear existing messages

  messages.forEach((message) => {
    const messageElement = document.createElement("div");

    // Check sender type and apply the appropriate class
    if (message.sender_type === 'team') {
      messageElement.classList.add('message', 'sent'); 
    } else if (message.sender_type === 'user') {
      messageElement.classList.add('message', 'received');
    }

    // Format the received message
    const date = new Date(message.created_at); // Assuming you have created_at in your message object
    const dateString = date.toLocaleDateString('th-TH', { year: 'numeric', month: 'long', day: 'numeric' });
    const timeString = date.toLocaleTimeString('th-TH', { hour: '2-digit', minute: '2-digit' });

    // Update innerHTML with styling
    messageElement.innerHTML = `
     
      <span class="text-gray text-sm">${dateString} ${timeString}</span><br>
      <span>${message.message}</span>
    `;
    messagesContainer.appendChild(messageElement);
  });
});
  
    // เมื่อมีการส่งข้อความใหม่
    document.getElementById('send-button').onclick = () => {
      const messageInput = document.getElementById('message-input');
      const message = messageInput.value;
      if (message && currentRoom) {
        // สำหรับทีม
        socket.emit("chatMessage", {
          room: currentRoom,
          message,
          teamId,
          senderType: 'team' // ระบุว่ามาจากทีม
        });
  
        messageInput.value = ''; // ล้างข้อความ
      }
    };
  
    socket.on("chatMessage", (data) => {
  const messagesContainer = document.getElementById('messages');
  const messageElement = document.createElement("div");

  // Check sender type and apply the appropriate class
  if (data.sender_type === 'team') {
    messageElement.classList.add('message', 'sent'); // Left side
  } else if (data.sender_type === 'user') {
    messageElement.classList.add('message', 'received'); // Right side
  }

  // Format the received message
  const date = new Date();
  const dateString = date.toLocaleDateString('th-TH', { year: 'numeric', month: 'long', day: 'numeric' });
  const timeString = date.toLocaleTimeString('th-TH', { hour: '2-digit', minute: '2-digit' });

  // Update innerHTML with styling
  messageElement.innerHTML = `
    
    <span class="text-gray text-sm">${dateString} ${timeString}</span><br>
    <span>${data.message}</span>
  `;
  messagesContainer.appendChild(messageElement);
});

  
  </script>
  

</body>

</html>